---
# tasks file for configure_hdfs_yarn_cluster
- name: Generate and copy core-site.xml
  template:
    src: roles/configure_hdfs_yarn_cluster/templates/core-site.xml.j2
    dest: "{{ hadoop_conf_home }}/core-site.xml"
    owner: "{{ owner }}"
    group: "{{ group }}"
    mode: 0644
  become_method: sudo

- name: Generate and copy hdfs-site.xml
  template:
    src: roles/configure_hdfs_yarn_cluster/templates/hdfs-site.xml.j2
    dest: "{{ hadoop_conf_home }}/hdfs-site.xml"
    owner: "{{ owner }}"
    group: "{{ group }}"
    mode: 0644
  become_method: sudo

- name: Generate and copy mapred-site.xml
  template:
    src: roles/configure_hdfs_yarn_cluster/templates/mapred-site.xml.j2
    dest: "{{ hadoop_conf_home }}/mapred-site.xml"
    owner: "{{ owner }}"
    group: "{{ group }}"
    mode: 0644
  become_method: sudo

- name: Generate and copy yarn-site.xml
  template:
    src: roles/configure_hdfs_yarn_cluster/templates/yarn-site.xml.j2
    dest: "{{ hadoop_conf_home }}/yarn-site.xml"
    owner: "{{ owner }}"
    group: "{{ group }}"
    mode: 0644
  become_method: sudo

- name: Generate and copy spark-defaults.conf
  template:
    src: roles/configure_hdfs_yarn_cluster/templates/spark-defaults.conf.j2
    dest: "{{ spark_conf_home }}/spark-defaults.conf"
    owner: "{{ owner }}"
    group: "{{ group }}"
    mode: 0644
  become_method: sudo

- name: Get JAVA_HOME
  shell: dirname $(dirname $(readlink -f $(which javac)))
  register: get_java_home_output

# We delete and then recreate this block so that after every run, this block is at the end of bashrc. 
# If you wish to maintain the position of the block within bashrc, comment out the first step in this role.
- name: Delete the existing Ansible managed block of Environment Variables within hadoop-env.sh
  blockinfile:
    path: "{{ hadoop_conf_home }}/hadoop-env.sh"
    block: ""
    marker: "# ---------- {mark} ANSIBLE MANAGED BLOCK (DO NOT MODIFY) ------------"
    backup: yes

- name: Insert Ansible managed block of Environment Variables within hadoop-env.sh
  blockinfile:
    path: "{{ hadoop_conf_home }}/hadoop-env.sh"
    block: |
      export JAVA_HOME={{ get_java_home_output.stdout }}
    marker: "# ---------- {mark} ANSIBLE MANAGED BLOCK (DO NOT MODIFY) ------------"
    backup: yes
    state: present

- name: Remove the existing master file in Hadoop conf
  file: 
    name: "{{ hadoop_conf_home }}/master"
    state: absent

- name: Insert Ansible managed block of Environment Variables within master
  blockinfile:
    path: "{{ hadoop_conf_home }}/master"
    block: |
      {{ item }}
    marker: "# ---------- {mark} ANSIBLE MANAGED BLOCK (DO NOT MODIFY) {{ item }} ------------"
    backup: no
    create: yes
    state: present
  with_items: "{{ groups['master']}}"

- name: Remove the existing workers file in Haddop conf
  file: 
    name: "{{ hadoop_conf_home }}/workers"
    state: absent

- name: Insert Ansible managed block of Environment Variables within workers
  blockinfile:
    path: "{{ hadoop_conf_home }}/workers"
    block: |
      {{ item }}
    marker: "# ---------- {mark} ANSIBLE MANAGED BLOCK (DO NOT MODIFY) {{ item }} ------------"
    backup: no
    create: yes
    state: present
  with_items: "{{ groups['workers']}}"

